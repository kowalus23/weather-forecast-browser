{"version":3,"sources":["actions/index.js","actions/types.js","components/containers/SearchBar.js","components/Chart.js","components/containers/WeatherList.js","components/App.js","reducers/index.js","reducers/weatherReducer.js","index.js"],"names":["fetchWeather","city","iso","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","url","response","wrap","_context","prev","next","concat","axios","get","sent","type","payload","data","stop","_x","apply","this","arguments","SearchBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","term","target","value","onSelectChange","isoValue","onSubmit","preventDefault","state","react_default","createElement","className","action","onChange","placeholder","onClick","React","Component","connect","weather","weathers","Chart","Math","ceil","build","height","width","color","_","sum","length","average","WeatherList","renderWeather","cityData","name","temps","list","map","main","temp","pressures","pressure","humidities","humidity","key","App","containers_SearchBar","containers_WeatherList","combineReducers","undefined","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.34e3b242.chunk.js","sourcesContent":["import axios from 'axios'\nimport {FETCH_WEATHER} from \"./types\";\n\nconst API_KEY = '245f56885be0894b0b4c324ba6f51211';\nconst ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?`;\n\n\nexport const fetchWeather = (city, iso) => async dispatch => {\n  const url = `${ROOT_URL}q=${city},${iso}&appid=${API_KEY}`;\n  const response = await axios.get(url);\n\n  dispatch({\n    type: FETCH_WEATHER,\n    payload: response.data\n  })\n};","export const FETCH_WEATHER = 'FETCH_WEATHER';\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchWeather} from '../../actions'\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      isoValue: 'pl'\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchWeather('Warsaw', 'pl')\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      term: event.target.value\n    });\n  };\n\n  onSelectChange = (event) => {\n    this.setState({\n      isoValue: event.target.value\n    })\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.fetchWeather(this.state.term, this.state.isoValue);\n    this.setState({\n      term: ''\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"text-center mt-3\">5-days Weather searcher</h3>\n        <form className=\"form-inline justify-content-center my-4\" action=\"\">\n          <select className=\"custom-select mr-3\" onChange={this.onSelectChange}>\n            <option value=\"pl\">PL</option>\n            <option value=\"nl\">NL</option>\n            <option value=\"fr\">FR</option>\n          </select>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            className=\"form-control text-center\"\n            value={this.state.term}\n            onChange={this.onInputChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-dark custom-button\"\n            onClick={this.onSubmit}>\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {weather: state.weathers}\n};\n\nexport default connect(mapStateToProps, {fetchWeather})(SearchBar);\n","import React from 'react';\nimport _ from 'lodash'\nimport {Sparklines, SparklinesLine, SparklinesReferenceLine} from 'react-sparklines'\n\nconst average = (data) => {\n  if (_.sum(data) / data.length > 90 && _.sum(data) / data.length < 900) {\n    return Math.ceil((_.sum(data) / data.length) - 273.15) + '°C'\n  }\n  return Math.ceil(_.sum(data) / data.length)\n};\n\nconst current = (data) => {\n  if (data[0] > 90 && data[0] < 900) {\n    return Math.ceil(data[0] - 273.15) + '°C'\n  }\n  return Math.ceil(data[0])\n};\n\n\nexport default (props) => {\n  return (\n    <div>Current: {current(props.data)}\n      <Sparklines height={120} width={180} data={props.data}>\n        <SparklinesLine color={props.color}/>\n        <SparklinesReferenceLine type={'avg'}/>\n      </Sparklines>\n      <div>\n        Average: {average(props.data)}\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchWeather} from \"../../actions\";\nimport Chart from '../Chart'\n\nclass WeatherList extends React.Component {\n  renderWeather = (cityData) => {\n    const name = cityData.city.name;\n    const temps = cityData.list.map(weather => weather.main.temp);\n    const pressures = cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData.list.map(weather => weather.main.humidity);\n\n    return (\n      <tr key={name} className=\"text-center border-bottom\">\n        <td className={'w-25 align-middle'}><h2 className={'__custom m-0'}>{name}</h2></td>\n        <td className={'w-25'}><Chart data={temps} color={'orange'}/></td>\n        <td className={'w-25'}><Chart data={pressures} color={'green'}/></td>\n        <td className={'w-25'}><Chart data={humidities} color={'blue'}/></td>\n      </tr>\n    )\n  };\n\n  render() {\n    return (\n      <div className=\"table-responsive\">\n      <table className=\"table table-hover\">\n        <thead className=\"thead-dark\">\n        <tr className=\"text-center\">\n          <th>City</th>\n          <th>Temperature (C)</th>\n          <th>Pressure (hPa)</th>\n          <th>Humidity (%)</th>\n        </tr>\n        </thead>\n        <tbody className=\"text-center\">\n        {this.props.weather.map(this.renderWeather)}\n        </tbody>\n      </table>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {weather: state.weathers}\n};\n\nexport default connect(mapStateToProps,\n  {fetchWeather})(WeatherList);","import React from 'react';\nimport '../style/App.css';\nimport SearchBar from \"./containers/SearchBar\";\nimport WeatherList from \"./containers/WeatherList\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <SearchBar/>\n        <WeatherList/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport weatherReducer from \"./weatherReducer\";\n\nexport default combineReducers({\n  weathers: weatherReducer\n});\n\n","import {FETCH_WEATHER} from \"../actions/types\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_WEATHER:\n      return [action.payload, ...state];\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers'\nimport './style/index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  ,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}